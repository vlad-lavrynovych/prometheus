apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-app
  labels:
    app: spring-app
spec:
  selector:
    matchLabels:
      app: spring-app
  template:
    metadata:
      labels:
        app: spring-app
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/actuator/prometheus"
    spec:
      containers:
        - name: spring-app
          image: vlavrynovych/prometheus
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: spring-app-service
  labels:
    app: spring-app
spec:
  ports:
    - protocol: TCP
      name: http
      port: 8080
      targetPort: 8080
  selector:
    app: spring-app
status:
  loadBalancer: {}

---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: spring-app-service-monitor
  labels:
    release: prometheus
    app: spring-app-service-monitor
spec:
  endpoints:
    - interval: 5s
      targetPort: 8080
      path: "/actuator/prometheus"
  selector:
    matchLabels:
      app: spring-app
---
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  labels:
    app: spring-app
    prometheus: kube-prometheus-stack-prometheus
    release: prometheus
    role: alert-rules
  name: spring-app
spec:
  groups:
    - name: "spring-app.rules"
      rules:
        - alert: PodDown
          for: 1m
          expr: sum(up{app="spring-app-service-monitor"}) < 1
          annotations:
            message: The deployment spring-app has less than 1 pod running.
        - alert: RequestLimit
          expr: sum_over_time(request_success_total{application="spring-app"}[30s]) > 10
          for: 1m
          labels:
            severity: critical
            type: "service"
          annotations:
            summary: "Total request count Limit Exceeded 10"
            description: "Total request count Exceeded the Limit on pod (> 10 / m)  VALUE = {{ $value }}  LABELS: {{ $labels }}"